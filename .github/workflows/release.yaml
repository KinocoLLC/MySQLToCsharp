name: release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*" # only tag

jobs:
  build-dotnet:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      NUGET_XMLDOC_MODE: skip
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      # tag
      - run: echo "GIT_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      # build
      - run: dotnet build ./src/MySQLToCsharp.Parser/ -c Release -p:Version=${{ env.GIT_TAG }}
      - run: dotnet build ./src/MySQLToCsharp/ -c Release -p:Version=${{ env.GIT_TAG }}
      # pack
      - run: dotnet pack ./src/MySQLToCsharp/ -c Release -p:Version=${{ env.GIT_TAG }} -o ./pack
      - uses: actions/upload-artifact@v2
        with:
          name: nuget
          path: ./pack/
      # publish
      - run: dotnet publish ./src/MySQLToCsharp/ -c Release -o ./publish -f netcoreapp3.1 -r win-x64 -p:PublishSingleFile=true -p:Version=${{ env.GIT_TAG }}
      - run: dotnet publish ./src/MySQLToCsharp/ -c Release -o ./publish -f netcoreapp3.1 -r linux-x64 -p:PublishSingleFile=true -p:Version=${{ env.GIT_TAG }}
      - run: dotnet publish ./src/MySQLToCsharp/ -c Release -o ./publish -f netcoreapp3.1 -r osx-x64 -p:PublishSingleFile=true -p:Version=${{ env.GIT_TAG }}
      - uses: actions/upload-artifact@v2
        with:
          name: publish
          path: ./publish/

  create-release:
    needs: [build-dotnet]
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      NUGET_XMLDOC_MODE: skip
    steps:
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - run: echo "GIT_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      # Create Release
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
      - uses: actions/download-artifact@v2
      # upload nuget
      - run: dotnet nuget push "./nuget/*.nupkg" --skip-duplicate -s https://www.nuget.org/api/v2/package -k ${{ secrets.SYNCED_NUGET_KEY }}
      # upload release
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/MySQLToCsharp_win-x64_${{ env.GIT_TAG }}.exe
          asset_name: MySQLToCsharp_win-x64_${{ env.GIT_TAG }}.exe
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/MySQLToCsharp_linux-x64_${{ env.GIT_TAG }}
          asset_name: MySQLToCsharp_linux-x64_${{ env.GIT_TAG }}
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/MySQLToCsharp_osx-x64_${{ env.GIT_TAG }}
          asset_name: MySQLToCsharp_osx-x64_${{ env.GIT_TAG }}
          asset_content_type: application/octet-stream
