version: 2.1
executors:
  dotnet:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:2.1
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"
      NUGET_XMLDOC_MODE: skip
      BUILD_CONFIG: Release
      CIRCLE_TEST_REPORTS: /workspace/circleci-test-results
  dotnet3:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.0
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"
      NUGET_XMLDOC_MODE: skip
  go:
    docker:
      - image: circleci/golang
jobs:
  build-test:
    executor: dotnet
    steps:
      - checkout
      - run: dotnet tool install -g dotnet-reportgenerator-globaltool
      - run: dotnet build -c Debug
      - run: dotnet test -c Debug --no-build -p:CollectCoverage=true -p:CoverletOutputFormat=opencover --test-adapter-path:. --logger:"xunit;LogFilePath=results.xml"
      - run: curl -s https://codecov.io/bash > codecov
      - run: chmod +x codecov
      - run: ./codecov -f ./src/MySQLToCsharp.Tests/coverage.opencover.xml
      - run:
          command: |
            mkdir -p $CIRCLE_TEST_REPORTS
            echo 'export PATH=$PATH:$HOME/.dotnet/tools' >> $BASH_ENV
            source $BASH_ENV && dotnet tool install -g dotnet-xunit-to-junit
            dotnet-xunit-to-junit ./src/MySQLToCsharp.Tests/results.xml "${CIRCLE_TEST_REPORTS}/results.xml"
      - store_test_results:
          path: /workspace/circleci-test-results
  build-push:
    executor: dotnet
    steps:
      - checkout
      - run: dotnet build -c Release -p:Version=${CIRCLE_TAG}
      - run: dotnet test -c Release --no-build
      - run: dotnet pack ./src/MySQLToCsharp/MySQLToCsharp.csproj -c Release --no-build -p:Version=${CIRCLE_TAG}
      - run: dotnet nuget push ./src/MySQLToCsharp/bin/Release/MySQLToCsharp.${CIRCLE_TAG}.nupkg -s https://www.nuget.org/api/v2/package -k ${NUGET_KEY}
      - store_artifacts:
          path: ./src/MySQLToCsharp/bin/Release
          destination: ./MySQLToCsharp/
  build-singlepackage:
    executor: dotnet3
    steps:
      - checkout
      - run: dotnet publish ./src/MySQLToCsharp/ -c Release -o ./MySQLToCsharp -r win-x64 -p:PublishSingleFile=true -p:Version=${CIRCLE_TAG}
      - run: dotnet publish ./src/MySQLToCsharp/ -c Release -o ./MySQLToCsharp -r linux-x64 -p:PublishSingleFile=true -p:Version=${CIRCLE_TAG}
      - run: dotnet publish ./src/MySQLToCsharp/ -c Release -o ./MySQLToCsharp -r osx-x64 -p:PublishSingleFile=true -p:Version=${CIRCLE_TAG}
      - persist_to_workspace:
          root: .
          paths:
            - ./MySQLToCsharp
  upload-github:
    executor: go
    steps:
      - attach_workspace:
          at: ./artifacts
      - run: go get github.com/tcnksm/ghr
      - run: ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -delete ${CIRCLE_TAG} ./artifacts/MySQLToCsharp/
      - store_artifacts:
          path: ./artifacts/MySQLToCsharp
workflows:
  build-and-push:
    jobs:
      - build-test:
          filters:
            tags:
              only: /.*/
      - build-push:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - build-singlepackage:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - upload-github:
          requires:
            - build-singlepackage
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
